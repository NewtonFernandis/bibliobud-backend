// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// schema.prisma

// Define the User model
model User {
  id               Int       @id @default(autoincrement())
  username         String    @unique
  email            String    @unique
  password         String
  profilePicture   String?
  books            Book[]
  sentRequests     Request[] @relation("SentRequests")
  receivedRequests Request[] @relation("ReceivedRequests")
  chats            Chat[]    @relation("UserChats")
  Request          Request[]
}

// Define the Book model
model Book {
  id          Int       @id @default(autoincrement())
  title       String
  author      String
  isbn        String    @unique
  description String?
  genre       String
  ownerId     Int
  owner       User      @relation(fields: [ownerId], references: [id])
  requests    Request[]
}

// Define the Request model
model Request {
  id         Int    @id @default(autoincrement())
  bookId     Int
  book       Book   @relation(fields: [bookId], references: [id])
  senderId   Int
  sender     User   @relation("SentRequests", fields: [senderId], references: [id])
  receiverId Int
  receiver   User   @relation("ReceivedRequests", fields: [receiverId], references: [id])
  status     String
  User       User?  @relation(fields: [userId], references: [id])
  userId     Int?
}

// Define the Chat model
model Chat {
  id        Int       @id @default(autoincrement())
  users     User[]    @relation("UserChats")
  messages  Message[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
}

// Define the Message model (inside the Chat model)
model Message {
  id        Int      @id @default(autoincrement())
  chatId    Int
  chat      Chat     @relation(fields: [chatId], references: [id])
  content   String
  timestamp DateTime @default(now())
}
